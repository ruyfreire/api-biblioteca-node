generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model authors {
  id          String        @id(map: "author_id") @db.Uuid
  name        String        @unique(map: "unique_author_name") @db.VarChar(255)
  created_at  DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at  DateTime?     @default(now()) @db.Timestamptz(6)
  deleted_at  DateTime?     @db.Timestamptz(6)
  author_book author_book[]
}

model books {
  id          String        @id(map: "book_id") @db.Uuid
  name        String        @unique(map: "unique_book_name") @db.VarChar(255)
  summary     String        @db.VarChar(600)
  created_at  DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at  DateTime?     @default(now()) @db.Timestamptz(6)
  deleted_at  DateTime?     @db.Timestamptz(6)
  author_book author_book[]
}

model author_book {
  author_id String  @db.Uuid
  book_id   String  @db.Uuid
  authors   authors @relation(fields: [author_id], references: [id], onDelete: Cascade, map: "fk_author_id")
  books     books   @relation(fields: [book_id], references: [id], onDelete: Cascade, map: "fk_book_id")

  @@id([author_id, book_id])
  @@index([author_id], map: "fki_fk_author_id")
  @@index([book_id], map: "fki_fk_book_id")
}
