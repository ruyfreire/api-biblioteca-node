openapi: 3.0.0

info:
  title: Biblioteca API
  description: Biblioteca para cadastrar, listar ou alterar livros e autores
  version: 0.0.1

servers:
  - url: http://localhost:3000
    description: Local

paths:
  /author:
    post:
      tags:
        - Autor
      summary: Criar um novo autor
      requestBody:
        $ref: '#/components/requestBodies/AuthorCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    $ref: '#/components/codes/CodeSuccess'
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Author'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalError'

    get:
      tags:
        - Autor
      summary: Listar autores
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    $ref: '#/components/codes/CodeSuccess'
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Author'
        '500':
          $ref: '#/components/responses/InternalError'

  /author/{id}:
    get:
      tags:
        - Autor
      summary: Buscar autor por ID
      parameters:
        - $ref: '#/components/parameters/AuthorId'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    $ref: '#/components/codes/CodeSuccess'
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Author'
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    $ref: '#/components/codes/CodeNotFound'
                  message:
                    type: string
        '500':
          $ref: '#/components/responses/InternalError'

    put:
      tags:
        - Autor
      summary: Editar autor por ID
      parameters:
        - $ref: '#/components/parameters/AuthorId'
      requestBody:
        $ref: '#/components/requestBodies/AuthorCreate'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    $ref: '#/components/codes/CodeSuccess'
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Author'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalError'

    delete:
      tags:
        - Autor
      summary: Deletar autor por ID
      parameters:
        - $ref: '#/components/parameters/AuthorId'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    $ref: '#/components/codes/CodeSuccess'
                  message:
                    type: string
        '500':
          $ref: '#/components/responses/InternalError'

components:
  schemas:
    Author:
      type: object
      description: Objeto autor
      properties:
        id:
          type: string
          format: uuid
          description: Identificador único no formato uuid
        name:
          type: string
          description: Nome completo do autor
    ResponseCodes:
      description: Códigos retornados pela API
      oneOf:
        - $ref: '#/components/codes/CodeSuccess'
        - $ref: '#/components/codes/CodeValidation'
        - $ref: '#/components/codes/CodeUnauthorized'
        - $ref: '#/components/codes/CodeNotFound'
        - $ref: '#/components/codes/CodeDatabaseError'
        - $ref: '#/components/codes/CodeInternalError'

  parameters:
    AuthorId:
      name: id
      in: path
      description: ID do usuário
      required: true
      schema:
        type: string
        format: uuid

  requestBodies:
    AuthorCreate:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string

  responses:
    ValidationError:
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                $ref: '#/components/codes/CodeValidation'
              message:
                type: string
              data:
                type: array
                items:
                  type: string
    InternalError:
      content:
        application/json:
          schema:
            type: object
            description: Objeto de erro interno
            properties:
              id_error:
                type: string
                format: uuid
              code:
                oneOf:
                  - $ref: '#/components/codes/CodeInternalError'
                  - $ref: '#/components/codes/CodeDatabaseError'
              status:
                type: number
              message:
                type: string
              data:
                anyOf:
                  - type: string
                  - type: integer
                  - type: array
                    items: {}
                  - type: object
                nullable: true

  codes:
    CodeSuccess:
      type: string
      description: Operação com sucesso
      enum:
        - success

    CodeValidation:
      type: string
      description: Erro de validação
      enum:
        - error.validation

    CodeNotFound:
      type: string
      description: Não encontrado
      enum:
        - error.notFound

    CodeUnauthorized:
      type: string
      description: Não autorizado
      enum:
        - error.notAuthorized

    CodeDatabaseError:
      type: string
      description: Erros de banco de dados
      enum:
        - error.database.internal
        - error.database.unique
        - error.database.notFound
        - error.database.validation

    CodeInternalError:
      type: string
      description: Erro genérico interno
      enum:
        - error.internal
